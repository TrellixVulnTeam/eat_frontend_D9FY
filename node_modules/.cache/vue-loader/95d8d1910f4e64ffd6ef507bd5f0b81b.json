{"remainingRequest":"C:\\Users\\olyamv\\Desktop\\eatwith-vol-2\\eat_frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\olyamv\\Desktop\\eatwith-vol-2\\eat_frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\olyamv\\Desktop\\eatwith-vol-2\\eat_frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\olyamv\\Desktop\\eatwith-vol-2\\eat_frontend\\src\\cmps\\app-header.vue?vue&type=template&id=74958ad2&","dependencies":[{"path":"C:\\Users\\olyamv\\Desktop\\eatwith-vol-2\\eat_frontend\\src\\cmps\\app-header.vue","mtime":1627133064908},{"path":"C:\\Users\\olyamv\\Desktop\\eatwith-vol-2\\eat_frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626707063654},{"path":"C:\\Users\\olyamv\\Desktop\\eatwith-vol-2\\eat_frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1626707071203},{"path":"C:\\Users\\olyamv\\Desktop\\eatwith-vol-2\\eat_frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626707063654},{"path":"C:\\Users\\olyamv\\Desktop\\eatwith-vol-2\\eat_frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1626707071202}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}