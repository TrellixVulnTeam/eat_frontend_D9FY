{"remainingRequest":"C:\\Users\\olyamv\\Desktop\\eatwith\\eat-with\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\olyamv\\Desktop\\eatwith\\eat-with\\src\\store\\modules\\user-store.js","dependencies":[{"path":"C:\\Users\\olyamv\\Desktop\\eatwith\\eat-with\\src\\store\\modules\\user-store.js","mtime":1626592326875},{"path":"C:\\Users\\olyamv\\Desktop\\eatwith\\eat-with\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626330069107},{"path":"C:\\Users\\olyamv\\Desktop\\eatwith\\eat-with\\node_modules\\babel-loader\\lib\\index.js","mtime":1626330068006}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgdXNlclNlcnZpY2UgfSBmcm9tICcuLi8uLi9zZXJ2aWNlcy91c2VyLXNlcnZpY2UuanMnOwpleHBvcnQgZGVmYXVsdCB7CiAgc3RhdGU6IHsvLyBsb2dnZWRpblVzZXI6IHVzZXJTZXJ2aWNlLmdldExvZ2dlZGluVXNlcigpLAogICAgLy8gdXNlcnM6IFtdLAogICAgLy8gd2F0Y2hlZFVzZXI6IG51bGwKICB9LAogIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogIGdldHRlcnM6IHsvLyB1c2Vycyh7IHVzZXJzIH0pIHsgcmV0dXJuIHVzZXJzIH0sCiAgICAvLyBsb2dnZWRpblVzZXIoeyBsb2dnZWRpblVzZXIgfSkgeyByZXR1cm4gbG9nZ2VkaW5Vc2VyIH0sCiAgICAvLyB3YXRjaGVkVXNlcih7IHdhdGNoZWRVc2VyIH0pIHsgcmV0dXJuIHdhdGNoZWRVc2VyIH0KICB9LAogIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogIG11dGF0aW9uczogey8vIHNldExvZ2dlZGluVXNlcihzdGF0ZSwgeyB1c2VyIH0pIHsKICAgIC8vICAgICBzdGF0ZS5sb2dnZWRpblVzZXIgPSB1c2VyOwogICAgLy8gfSwKICAgIC8vIHNldFdhdGNoZWRVc2VyKHN0YXRlLCB7IHVzZXIgfSkgewogICAgLy8gICAgIHN0YXRlLndhdGNoZWRVc2VyID0gdXNlcjsKICAgIC8vIH0sICAgICAgIAogICAgLy8gc2V0VXNlcnMoc3RhdGUsIHsgdXNlcnMgfSkgewogICAgLy8gICAgIHN0YXRlLnVzZXJzID0gdXNlcnM7CiAgICAvLyB9LAogICAgLy8gc2V0VXNlcihzdGF0ZSwgeyB1c2VyIH0pIHsKICAgIC8vICAgICBzdGF0ZS5sb2dnZWRpblVzZXIgPSB1c2VyOwogICAgLy8gfSwKICAgIC8vIHJlbW92ZVVzZXIoc3RhdGUsIHsgdXNlcklkIH0pIHsKICAgIC8vICAgICBzdGF0ZS51c2VycyA9IHN0YXRlLnVzZXJzLmZpbHRlcih1c2VyID0+IHVzZXIuX2lkICE9PSB1c2VySWQpCiAgICAvLyB9LAogIH0sCiAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgYWN0aW9uczogey8vIGFzeW5jIGxvZ2luKHsgY29tbWl0IH0sIHsgdXNlckNyZWQgfSkgewogICAgLy8gICAgIGNvbnNvbGUubG9nKHVzZXJDcmVkKQogICAgLy8gICAgIHRyeSB7CiAgICAvLyAgICAgICAgIGNvbnN0IHVzZXIgPSBhd2FpdCB1c2VyU2VydmljZS5sb2dpbih1c2VyQ3JlZCk7CiAgICAvLyAgICAgICAgIGNvbW1pdCh7IHR5cGU6ICdzZXRMb2dnZWRpblVzZXInLCB1c2VyIH0pCiAgICAvLyAgICAgICAgIHJldHVybiB1c2VyOwogICAgLy8gICAgIH0gY2F0Y2ggKGVycikgewogICAgLy8gICAgICAgICBjb25zb2xlLmxvZygndXNlclN0b3JlOiBFcnJvciBpbiBsb2dpbicsIGVycikKICAgIC8vICAgICAgICAgdGhyb3cgZXJyCiAgICAvLyAgICAgfQogICAgLy8gfSwKICAgIC8vIGFzeW5jIHNpZ251cCh7IGNvbW1pdCB9LCB7IHVzZXJDcmVkIH0pIHsKICAgIC8vICAgICB0cnkgewogICAgLy8gICAgICAgICBjb25zdCB1c2VyID0gYXdhaXQgdXNlclNlcnZpY2Uuc2lnbnVwKHVzZXJDcmVkKQogICAgLy8gICAgICAgICBjb21taXQoeyB0eXBlOiAnc2V0TG9nZ2VkaW5Vc2VyJywgdXNlciB9KQogICAgLy8gICAgICAgICByZXR1cm4gdXNlcjsKICAgIC8vICAgICB9IGNhdGNoIChlcnIpIHsKICAgIC8vICAgICAgICAgY29uc29sZS5sb2coJ3VzZXJTdG9yZTogRXJyb3IgaW4gc2lnbnVwJywgZXJyKQogICAgLy8gICAgICAgICB0aHJvdyBlcnIKICAgIC8vICAgICB9CiAgICAvLyB9LAogICAgLy8gYXN5bmMgbG9nb3V0KHsgY29tbWl0IH0pIHsKICAgIC8vICAgICB0cnkgewogICAgLy8gICAgICAgICBjb25zdCBsb2dvdXQ9YXdhaXQgdXNlclNlcnZpY2UubG9nb3V0KCkKICAgIC8vICAgICAgICAgY29tbWl0KHsgdHlwZTogJ3NldExvZ2dlZGluVXNlcicsIHVzZXI6IG51bGwgfSkKICAgIC8vICAgICAgICByZXR1cm4gbG9nb3V0Lm1zZwogICAgLy8gICAgIH0gY2F0Y2ggKGVycikgewogICAgLy8gICAgICAgICBjb25zb2xlLmxvZygndXNlclN0b3JlOiBFcnJvciBpbiBsb2dvdXQnLCBlcnIpCiAgICAvLyAgICAgICAgIHRocm93IGVycgogICAgLy8gICAgIH0KICAgIC8vIH0sCiAgICAvLyBhc3luYyBsb2FkVXNlcnMoeyBjb21taXQgfSkgewogICAgLy8gICAgIHRyeSB7CiAgICAvLyAgICAgICAgIGNvbnN0IHVzZXJzID0gYXdhaXQgdXNlclNlcnZpY2UuZ2V0VXNlcnMoKTsKICAgIC8vICAgICAgICAgY29tbWl0KHsgdHlwZTogJ3NldFVzZXJzJywgdXNlcnMgfSkKICAgIC8vICAgICB9IGNhdGNoIChlcnIpIHsKICAgIC8vICAgICAgICAgY29uc29sZS5sb2coJ3VzZXJTdG9yZTogRXJyb3IgaW4gbG9hZFVzZXJzJywgZXJyKQogICAgLy8gICAgICAgICB0aHJvdyBlcnIKICAgIC8vICAgICB9CiAgICAvLyB9LCAgICAgICAgCiAgICAvLyBhc3luYyBsb2FkQW5kV2F0Y2hVc2VyKHsgY29tbWl0IH0sIHsgdXNlcklkIH0pIHsKICAgIC8vICAgICB0cnkgewogICAgLy8gICAgICAgICBjb25zdCB1c2VyID0gYXdhaXQgdXNlclNlcnZpY2UuZ2V0QnlJZCh1c2VySWQpOwogICAgLy8gICAgICAgICBjb21taXQoeyB0eXBlOiAnc2V0V2F0Y2hlZFVzZXInLCB1c2VyIH0pCiAgICAvLyAgICAgICAgIHNvY2tldFNlcnZpY2UuZW1pdChTT0NLRVRfRU1JVF9VU0VSX1dBVENILCB1c2VySWQpIAogICAgLy8gICAgICAgICBzb2NrZXRTZXJ2aWNlLm9mZihTT0NLRVRfRVZFTlRfVVNFUl9VUERBVEVEKQogICAgLy8gICAgICAgICBzb2NrZXRTZXJ2aWNlLm9uKFNPQ0tFVF9FVkVOVF9VU0VSX1VQREFURUQsIHVzZXIgPT4gewogICAgLy8gICAgICAgICAgICAgY29tbWl0KHsgdHlwZTogJ3NldFdhdGNoZWRVc2VyJywgdXNlciB9KQogICAgLy8gICAgICAgICB9KQogICAgLy8gICAgIH0gY2F0Y2ggKGVycikgewogICAgLy8gICAgICAgICBjb25zb2xlLmxvZygndXNlclN0b3JlOiBFcnJvciBpbiBsb2FkQW5kV2F0Y2hVc2VyJywgZXJyKQogICAgLy8gICAgICAgICB0aHJvdyBlcnIKICAgIC8vICAgICB9CiAgICAvLyB9LAogICAgLy8gYXN5bmMgcmVtb3ZlVXNlcih7IGNvbW1pdCB9LCB7IHVzZXJJZCB9KSB7CiAgICAvLyAgICAgdHJ5IHsKICAgIC8vICAgICAgICAgYXdhaXQgdXNlclNlcnZpY2UucmVtb3ZlKHVzZXJJZCk7CiAgICAvLyAgICAgICAgIGNvbW1pdCh7IHR5cGU6ICdyZW1vdmVVc2VyJywgdXNlcklkIH0pCiAgICAvLyAgICAgfSBjYXRjaCAoZXJyKSB7CiAgICAvLyAgICAgICAgIGNvbnNvbGUubG9nKCd1c2VyU3RvcmU6IEVycm9yIGluIHJlbW92ZVVzZXInLCBlcnIpCiAgICAvLyAgICAgICAgIHRocm93IGVycgogICAgLy8gICAgIH0KICAgIC8vIH0sCiAgICAvLyBhc3luYyB1cGRhdGVVc2VyKHsgY29tbWl0IH0sIHsgdXNlciB9KSB7CiAgICAvLyAgICAgdHJ5IHsKICAgIC8vICAgICAgICAgdXNlciA9IGF3YWl0IHVzZXJTZXJ2aWNlLnVwZGF0ZSh1c2VyKTsKICAgIC8vICAgICAgICAgY29tbWl0KHsgdHlwZTogJ3NldFVzZXInLCB1c2VyIH0pCiAgICAvLyAgICAgfSBjYXRjaCAoZXJyKSB7CiAgICAvLyAgICAgICAgIGNvbnNvbGUubG9nKCd1c2VyU3RvcmU6IEVycm9yIGluIHVwZGF0ZVVzZXInLCBlcnIpCiAgICAvLyAgICAgICAgIHRocm93IGVycgogICAgLy8gICAgIH0KICAgIC8vIH0KICB9Cn07"},{"version":3,"sources":["C:/Users/olyamv/Desktop/eatwith/eat-with/src/store/modules/user-store.js"],"names":["userService","state","getters","mutations","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,gCAA5B;AACA,eAAe;AAEXC,EAAAA,KAAK,EAAE,CACH;AACA;AACA;AAHG,GAFI;AAQX;AAEAC,EAAAA,OAAO,EAAE,CACL;AACA;AACA;AAHK,GAVE;AAeX;AAEAC,EAAAA,SAAS,EAAE,CACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfO,GAjBA;AAmCX;AAEAC,EAAAA,OAAO,EAAE,CACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AA1EK;AArCE,CAAf","sourcesContent":["import { userService } from '../../services/user-service.js'\r\nexport default {\r\n\r\n    state: {\r\n        // loggedinUser: userService.getLoggedinUser(),\r\n        // users: [],\r\n        // watchedUser: null\r\n    },\r\n\r\n    // ---------------------------------\r\n\r\n    getters: {\r\n        // users({ users }) { return users },\r\n        // loggedinUser({ loggedinUser }) { return loggedinUser },\r\n        // watchedUser({ watchedUser }) { return watchedUser }\r\n    },\r\n    // ---------------------------------\r\n\r\n    mutations: {\r\n        // setLoggedinUser(state, { user }) {\r\n        //     state.loggedinUser = user;\r\n        // },\r\n        // setWatchedUser(state, { user }) {\r\n        //     state.watchedUser = user;\r\n        // },       \r\n        // setUsers(state, { users }) {\r\n        //     state.users = users;\r\n        // },\r\n        // setUser(state, { user }) {\r\n        //     state.loggedinUser = user;\r\n        // },\r\n        // removeUser(state, { userId }) {\r\n        //     state.users = state.users.filter(user => user._id !== userId)\r\n        // },\r\n    },\r\n\r\n    // ---------------------------------\r\n\r\n    actions: {\r\n        // async login({ commit }, { userCred }) {\r\n        //     console.log(userCred)\r\n        //     try {\r\n        //         const user = await userService.login(userCred);\r\n        //         commit({ type: 'setLoggedinUser', user })\r\n        //         return user;\r\n        //     } catch (err) {\r\n        //         console.log('userStore: Error in login', err)\r\n        //         throw err\r\n        //     }\r\n        // },\r\n        // async signup({ commit }, { userCred }) {\r\n        //     try {\r\n        //         const user = await userService.signup(userCred)\r\n        //         commit({ type: 'setLoggedinUser', user })\r\n        //         return user;\r\n        //     } catch (err) {\r\n        //         console.log('userStore: Error in signup', err)\r\n        //         throw err\r\n        //     }\r\n\r\n        // },\r\n        // async logout({ commit }) {\r\n        //     try {\r\n        //         const logout=await userService.logout()\r\n        //         commit({ type: 'setLoggedinUser', user: null })\r\n        //        return logout.msg\r\n        //     } catch (err) {\r\n        //         console.log('userStore: Error in logout', err)\r\n        //         throw err\r\n        //     }\r\n        // },\r\n        // async loadUsers({ commit }) {\r\n        //     try {\r\n        //         const users = await userService.getUsers();\r\n        //         commit({ type: 'setUsers', users })\r\n        //     } catch (err) {\r\n        //         console.log('userStore: Error in loadUsers', err)\r\n        //         throw err\r\n        //     }\r\n        // },        \r\n        // async loadAndWatchUser({ commit }, { userId }) {\r\n        //     try {\r\n        //         const user = await userService.getById(userId);\r\n        //         commit({ type: 'setWatchedUser', user })\r\n        //         socketService.emit(SOCKET_EMIT_USER_WATCH, userId) \r\n        //         socketService.off(SOCKET_EVENT_USER_UPDATED)\r\n        //         socketService.on(SOCKET_EVENT_USER_UPDATED, user => {\r\n        //             commit({ type: 'setWatchedUser', user })\r\n        //         })\r\n        //     } catch (err) {\r\n        //         console.log('userStore: Error in loadAndWatchUser', err)\r\n        //         throw err\r\n        //     }\r\n        // },\r\n        // async removeUser({ commit }, { userId }) {\r\n        //     try {\r\n        //         await userService.remove(userId);\r\n        //         commit({ type: 'removeUser', userId })\r\n        //     } catch (err) {\r\n        //         console.log('userStore: Error in removeUser', err)\r\n        //         throw err\r\n        //     }\r\n        // },\r\n        // async updateUser({ commit }, { user }) {\r\n        //     try {\r\n        //         user = await userService.update(user);\r\n        //         commit({ type: 'setUser', user })\r\n        //     } catch (err) {\r\n        //         console.log('userStore: Error in updateUser', err)\r\n        //         throw err\r\n        //     }\r\n\r\n        // }\r\n\r\n\r\n    },\r\n}"]}]}