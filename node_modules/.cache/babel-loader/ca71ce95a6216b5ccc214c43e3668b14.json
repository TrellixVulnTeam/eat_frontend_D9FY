{"remainingRequest":"C:\\Users\\shani.VOICESENSE\\Documents\\CodingAcademy\\Ex-Submissions\\Shani Herzinger\\eat-with\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\shani.VOICESENSE\\Documents\\CodingAcademy\\Ex-Submissions\\Shani Herzinger\\eat-with\\frontend\\src\\services\\NEW-user-service.js","dependencies":[{"path":"C:\\Users\\shani.VOICESENSE\\Documents\\CodingAcademy\\Ex-Submissions\\Shani Herzinger\\eat-with\\frontend\\src\\services\\NEW-user-service.js","mtime":1626780573965},{"path":"C:\\Users\\shani.VOICESENSE\\Documents\\CodingAcademy\\Ex-Submissions\\Shani Herzinger\\eat-with\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626260724928},{"path":"C:\\Users\\shani.VOICESENSE\\Documents\\CodingAcademy\\Ex-Submissions\\Shani Herzinger\\eat-with\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1626260715884}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8gaW1wb3J0IHsgc3RvcmFnZVNlcnZpY2UgfSBmcm9tICcuL2FzeW5jLXN0b3JhZ2Uuc2VydmljZScKaW1wb3J0IHsgaHR0cFNlcnZpY2UgfSBmcm9tICcuL2h0dHAuc2VydmljZSc7IC8vIGltcG9ydCB7IHNvY2tldFNlcnZpY2UsIFNPQ0tFVF9FVkVOVF9VU0VSX1VQREFURUQgfSBmcm9tICcuL3NvY2tldC5zZXJ2aWNlJwoKY29uc3QgU1RPUkFHRV9LRVlfTE9HR0VESU5fVVNFUiA9ICdsb2dnZWRpblVzZXInOyAvLyBjb25zdCBTQ09SRV9GT1JfUkVWSUVXID0gMTAKLy8gdmFyIGdXYXRjaGVkVXNlciA9IG51bGw7CgpleHBvcnQgY29uc3QgTkVXdXNlclNlcnZpY2UgPSB7CiAgbG9naW4sCiAgbG9nb3V0LAogIHNpZ251cCwKICBnZXRVc2VycywKICBnZXRCeUlkLAogIHJlbW92ZSwKICB1cGRhdGUsCiAgZ2V0TG9nZ2VkaW5Vc2VyCn07IC8vIHdpbmRvdy51c2VyU2VydmljZSA9IHVzZXJTZXJ2aWNlCi8vIE5vdGU6IGR1ZSB0byBhc3luYywgbXVzdCBydW4gb25lIGJ5IG9uZS4uLgovLyB1c2VyU2VydmljZS5zaWdudXAoe2Z1bGxuYW1lOiAnUHVraSBOb3JtYScsIHVzZXJuYW1lOiAndXNlcjEnLCBwYXNzd29yZDonMTIzJyxzY29yZTogMTAwLCBpc0FkbWluOiBmYWxzZX0pCi8vIHVzZXJTZXJ2aWNlLnNpZ251cCh7ZnVsbG5hbWU6ICdNYXN0ZXIgQWRtaW5vdicsIHVzZXJuYW1lOiAnYWRtaW4nLCBwYXNzd29yZDonMTIzJywgc2NvcmU6IDEwMCwgaXNBZG1pbjogdHJ1ZX0pCi8vIHVzZXJTZXJ2aWNlLnNpZ251cCh7ZnVsbG5hbWU6ICdNdWtpIEcnLCB1c2VybmFtZTogJ211a2knLCBwYXNzd29yZDonMTIzJywgc2NvcmU6IDEwMH0pCgpmdW5jdGlvbiBnZXRVc2VycygpIHsKICAvLyByZXR1cm4gc3RvcmFnZVNlcnZpY2UucXVlcnkoJ3VzZXInKQogIHJldHVybiBodHRwU2VydmljZS5nZXQoYHVzZXJgKTsKfQoKYXN5bmMgZnVuY3Rpb24gc2lnbnVwKHVzZXJDcmVkKSB7CiAgLy8gdXNlckNyZWQuc2NvcmUgPSAxMDA7CiAgLy8gY29uc3QgdXNlciA9IGF3YWl0IHN0b3JhZ2VTZXJ2aWNlLnBvc3QoJ3VzZXInLCB1c2VyQ3JlZCkKICBjb25zdCB1c2VyID0gYXdhaXQgaHR0cFNlcnZpY2UucG9zdCgnYXV0aC9zaWdudXAnLCB1c2VyQ3JlZCk7IC8vIHNvY2tldFNlcnZpY2UuZW1pdCgnc2V0LXVzZXItc29ja2V0JywgdXNlci5faWQpOwoKICByZXR1cm4gX3NhdmVMb2NhbFVzZXIodXNlcik7Cn0KCmFzeW5jIGZ1bmN0aW9uIGxvZ2luKHVzZXJDcmVkKSB7CiAgLy8gY29uc3QgdXNlcnMgPSBhd2FpdCBzdG9yYWdlU2VydmljZS5xdWVyeSgndXNlcicpCiAgLy8gY29uc3QgdXNlciA9IHVzZXJzLmZpbmQodXNlciA9PiB1c2VyLnVzZXJuYW1lID09PSB1c2VyQ3JlZC51c2VybmFtZSkKICAvLyByZXR1cm4gX3NhdmVMb2NhbFVzZXIodXNlcikKICBjb25zdCB1c2VyID0gYXdhaXQgaHR0cFNlcnZpY2UucG9zdCgnYXV0aC9sb2dpbicsIHVzZXJDcmVkKTsgLy8gc29ja2V0U2VydmljZS5lbWl0KCdsb2dpbicsIHVzZXIuX2lkKTsKCiAgaWYgKHVzZXIpIHJldHVybiBfc2F2ZUxvY2FsVXNlcih1c2VyKTsKfQoKYXN5bmMgZnVuY3Rpb24gZ2V0QnlJZCh1c2VySWQpIHsKICAvLyBjb25zdCB1c2VyID0gYXdhaXQgc3RvcmFnZVNlcnZpY2UuZ2V0KCd1c2VyJywgdXNlcklkKQogIGNvbnNvbGUubG9nKHVzZXJJZCk7CiAgY29uc3QgdXNlciA9IGF3YWl0IGh0dHBTZXJ2aWNlLmdldChgdXNlci8ke3VzZXJJZH1gKTsgLy8gZ1dhdGNoZWRVc2VyID0gdXNlcjsKCiAgcmV0dXJuIHVzZXI7Cn0KCmZ1bmN0aW9uIHJlbW92ZSh1c2VySWQpIHsKICAvLyByZXR1cm4gc3RvcmFnZVNlcnZpY2UucmVtb3ZlKCd1c2VyJywgdXNlcklkKQogIHJldHVybiBodHRwU2VydmljZS5kZWxldGUoYHVzZXIvJHt1c2VySWR9YCk7Cn0KCmFzeW5jIGZ1bmN0aW9uIHVwZGF0ZSh1c2VyKSB7CiAgLy8gYXdhaXQgc3RvcmFnZVNlcnZpY2UucHV0KCd1c2VyJywgdXNlcikKICB1c2VyID0gYXdhaXQgaHR0cFNlcnZpY2UucHV0KGB1c2VyLyR7dXNlci5faWR9YCwgdXNlcik7IC8vIEhhbmRsZSBjYXNlIGluIHdoaWNoIGFkbWluIHVwZGF0ZXMgb3RoZXIgdXNlcidzIGRldGFpbHMKCiAgaWYgKGdldExvZ2dlZGluVXNlcigpLl9pZCA9PT0gdXNlci5faWQpIF9zYXZlTG9jYWxVc2VyKHVzZXIpOwogIHJldHVybiB1c2VyOwp9Cgphc3luYyBmdW5jdGlvbiBsb2dvdXQoKSB7CiAgc2Vzc2lvblN0b3JhZ2UucmVtb3ZlSXRlbShTVE9SQUdFX0tFWV9MT0dHRURJTl9VU0VSKTsgLy8gc29ja2V0U2VydmljZS5lbWl0KCd1bnNldC11c2VyLXNvY2tldCcpOwoKICByZXR1cm4gYXdhaXQgaHR0cFNlcnZpY2UucG9zdCgnYXV0aC9sb2dvdXQnKTsKfQoKZnVuY3Rpb24gX3NhdmVMb2NhbFVzZXIodXNlcikgewogIHNlc3Npb25TdG9yYWdlLnNldEl0ZW0oU1RPUkFHRV9LRVlfTE9HR0VESU5fVVNFUiwgSlNPTi5zdHJpbmdpZnkodXNlcikpOwogIHJldHVybiB1c2VyOwp9CgpmdW5jdGlvbiBnZXRMb2dnZWRpblVzZXIoKSB7CiAgcmV0dXJuIEpTT04ucGFyc2Uoc2Vzc2lvblN0b3JhZ2UuZ2V0SXRlbShTVE9SQUdFX0tFWV9MT0dHRURJTl9VU0VSKSB8fCAnbnVsbCcpOwp9IC8vIFRoaXMgSUlGRSBmdW5jdGlvbnMgZm9yIERldiBwdXJwb3NlcyAKLy8gSXQgYWxsb3dzIHRlc3Rpbmcgb2YgcmVhbCB0aW1lIHVwZGF0ZXMgKHN1Y2ggYXMgc29ja2V0cykgYnkgbGlzdGVuaW5nIHRvIHN0b3JhZ2UgZXZlbnRzCgoKKGFzeW5jICgpID0+IHsKICB2YXIgdXNlciA9IGdldExvZ2dlZGluVXNlcigpOyAvLyBEZXYgSGVscGVyOiBMaXN0ZW5zIHRvIHdoZW4gbG9jYWxTdG9yYWdlIGNoYW5nZXMgaW4gT1RIRVIgYnJvd3NlcgogIC8vIEhlcmUgd2UgYXJlIGxpc3RlbmluZyB0byBjaGFuZ2VzIGZvciB0aGUgd2F0Y2hlZCB1c2VyIChjb21taW5nIGZyb20gb3RoZXIgYnJvd3NlcnMpCgogIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdzdG9yYWdlJywgYXN5bmMgKCkgPT4gewogICAgaWYgKCFnV2F0Y2hlZFVzZXIpIHJldHVybjsKICAgIGNvbnN0IGZyZXNoVXNlcnMgPSBhd2FpdCBzdG9yYWdlU2VydmljZS5xdWVyeSgndXNlcicpOwogICAgY29uc3Qgd2F0Y2hlZFVzZXIgPSBmcmVzaFVzZXJzLmZpbmQodSA9PiB1Ll9pZCA9PT0gZ1dhdGNoZWRVc2VyLl9pZCk7CiAgICBpZiAoIXdhdGNoZWRVc2VyKSByZXR1cm47CgogICAgaWYgKGdXYXRjaGVkVXNlci5zY29yZSAhPT0gd2F0Y2hlZFVzZXIuc2NvcmUpIHsKICAgICAgY29uc29sZS5sb2coJ1dhdGNoZWQgdXNlciBzY29yZSBjaGFuZ2VkIC0gbG9jYWxTdG9yYWdlIHVwZGF0ZWQgZnJvbSBhbm90aGVyIGJyb3dzZXInKTsKICAgICAgc29ja2V0U2VydmljZS5lbWl0KFNPQ0tFVF9FVkVOVF9VU0VSX1VQREFURUQsIHdhdGNoZWRVc2VyKTsKICAgIH0KCiAgICBnV2F0Y2hlZFVzZXIgPSB3YXRjaGVkVXNlcjsKICB9KTsKfSkoKTsgLy8gVGhpcyBpcyByZWxldmFudCB3aGVuIGJhY2tlbmQgaXMgY29ubmVjdGVkCi8vc29ja2V0U2VydmljZToKLy8gKGFzeW5jICgpID0+IHsKLy8gICAgIHZhciB1c2VyID0gZ2V0TG9nZ2VkaW5Vc2VyKCkKLy8gICAgIGlmICh1c2VyKSBzb2NrZXRTZXJ2aWNlLmVtaXQoJ3NldC11c2VyLXNvY2tldCcsIHVzZXIuX2lkKQovLyB9KSgpOw=="},{"version":3,"sources":["C:/Users/shani.VOICESENSE/Documents/CodingAcademy/Ex-Submissions/Shani Herzinger/eat-with/frontend/src/services/NEW-user-service.js"],"names":["httpService","STORAGE_KEY_LOGGEDIN_USER","NEWuserService","login","logout","signup","getUsers","getById","remove","update","getLoggedinUser","get","userCred","user","post","_saveLocalUser","userId","console","log","delete","put","_id","sessionStorage","removeItem","setItem","JSON","stringify","parse","getItem","window","addEventListener","gWatchedUser","freshUsers","storageService","query","watchedUser","find","u","score","socketService","emit","SOCKET_EVENT_USER_UPDATED"],"mappings":"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","sourcesContent":["// import { storageService } from './async-storage.service'\r\nimport { httpService } from './http.service'\r\n// import { socketService, SOCKET_EVENT_USER_UPDATED } from './socket.service'\r\nconst STORAGE_KEY_LOGGEDIN_USER = 'loggedinUser'\r\n// const SCORE_FOR_REVIEW = 10\r\n// var gWatchedUser = null;\r\n\r\nexport const NEWuserService = {\r\n    login,\r\n    logout,\r\n    signup,\r\n    getUsers,\r\n    getById,\r\n    remove,\r\n    update,\r\n    getLoggedinUser\r\n}\r\n\r\n// window.userService = userService\r\n\r\n// Note: due to async, must run one by one...\r\n// userService.signup({fullname: 'Puki Norma', username: 'user1', password:'123',score: 100, isAdmin: false})\r\n// userService.signup({fullname: 'Master Adminov', username: 'admin', password:'123', score: 100, isAdmin: true})\r\n// userService.signup({fullname: 'Muki G', username: 'muki', password:'123', score: 100})\r\n\r\nfunction getUsers() {\r\n    // return storageService.query('user')\r\n    return httpService.get(`user`)\r\n}\r\n\r\nasync function signup(userCred) {\r\n    // userCred.score = 100;\r\n    // const user = await storageService.post('user', userCred)\r\n    const user = await httpService.post('auth/signup', userCred)\r\n    // socketService.emit('set-user-socket', user._id);\r\n    return _saveLocalUser(user)\r\n}\r\n\r\nasync function login(userCred) {\r\n    // const users = await storageService.query('user')\r\n    // const user = users.find(user => user.username === userCred.username)\r\n    // return _saveLocalUser(user)\r\n\r\n    const user = await httpService.post('auth/login', userCred)\r\n    // socketService.emit('login', user._id);\r\n    if (user) return _saveLocalUser(user)\r\n}\r\n\r\nasync function getById(userId) {\r\n    // const user = await storageService.get('user', userId)\r\n    console.log(userId)\r\n    const user = await httpService.get(`user/${userId}`)\r\n    // gWatchedUser = user;\r\n    return user;\r\n}\r\nfunction remove(userId) {\r\n    // return storageService.remove('user', userId)\r\n    return httpService.delete(`user/${userId}`)\r\n}\r\n\r\nasync function update(user) {\r\n    // await storageService.put('user', user)\r\n    user = await httpService.put(`user/${user._id}`, user)\r\n    // Handle case in which admin updates other user's details\r\n    if (getLoggedinUser()._id === user._id) _saveLocalUser(user)\r\n    return user;\r\n}\r\n\r\nasync function logout() {\r\n    sessionStorage.removeItem(STORAGE_KEY_LOGGEDIN_USER)\r\n    // socketService.emit('unset-user-socket');\r\n    return await httpService.post('auth/logout')\r\n}\r\n\r\nfunction _saveLocalUser(user) {\r\n    sessionStorage.setItem(STORAGE_KEY_LOGGEDIN_USER, JSON.stringify(user))\r\n    return user\r\n}\r\n\r\nfunction getLoggedinUser() {\r\n    return JSON.parse(sessionStorage.getItem(STORAGE_KEY_LOGGEDIN_USER) || 'null')\r\n}\r\n\r\n// This IIFE functions for Dev purposes \r\n// It allows testing of real time updates (such as sockets) by listening to storage events\r\n(async () => {\r\n    var user = getLoggedinUser()\r\n    // Dev Helper: Listens to when localStorage changes in OTHER browser\r\n\r\n    // Here we are listening to changes for the watched user (comming from other browsers)\r\n    window.addEventListener('storage', async () => {\r\n        if (!gWatchedUser) return;\r\n        const freshUsers = await storageService.query('user')\r\n        const watchedUser = freshUsers.find(u => u._id === gWatchedUser._id)\r\n        if (!watchedUser) return;\r\n        if (gWatchedUser.score !== watchedUser.score) {\r\n            console.log('Watched user score changed - localStorage updated from another browser')\r\n            socketService.emit(SOCKET_EVENT_USER_UPDATED, watchedUser)\r\n        }\r\n        gWatchedUser = watchedUser\r\n    })\r\n})();\r\n\r\n// This is relevant when backend is connected\r\n\r\n\r\n//socketService:\r\n\r\n// (async () => {\r\n//     var user = getLoggedinUser()\r\n//     if (user) socketService.emit('set-user-socket', user._id)\r\n// })();"]}]}